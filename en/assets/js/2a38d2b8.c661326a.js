(self.webpackChunkgarfish_docs=self.webpackChunkgarfish_docs||[]).push([[2],{5318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3109:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(9603),a=n(120),o=(n(7378),n(5318)),i=["components"],p={title:"props",slug:"/napi/attributes/props",order:2},s=void 0,c={unversionedId:"napi/attributes/props",id:"napi/attributes/props",isDocsHomePage:!1,title:"props",description:"Garfish.props is used to get the public content passed by the main application, to use shared data, or to pass specified content to child applications. Can be used with mobx.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/napi/attributes/props.md",sourceDirName:"napi/attributes",slug:"/napi/attributes/props",permalink:"/en/napi/attributes/props",editUrl:"https://github.com/bytedance/garfish/docs/napi/attributes/props.md",version:"current",lastUpdatedBy:"zhoushaw",lastUpdatedAt:1627473311,formattedLastUpdatedAt:"7/28/2021",frontMatter:{title:"props",slug:"/napi/attributes/props",order:2},sidebar:"napi",previous:{title:"API Reference",permalink:"/en/napi/new"},next:{title:"router",permalink:"/en/napi/attributes/router"}},u=[{value:"Master application shared data",id:"master-application-shared-data",children:[]},{value:"Sub-application fetching data",id:"sub-application-fetching-data",children:[]},{value:"Or get it in the provider",id:"or-get-it-in-the-provider",children:[]}],l={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Garfish.props")," is used to get the public content passed by the main application, to use shared data, or to pass specified content to child applications. Can be used with ",(0,o.kt)("a",{parentName:"p",href:"https://cn.mobx.js.org"},"mobx"),"."),(0,o.kt)("h3",{id:"master-application-shared-data"},"Master application shared data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import Garfish from 'garfish';\nimport { observable, computed, action } from 'mobx';\n\nclass Store {\n  @observable price = 0;\n  @observable amount = 1;\n\n  @computed get total() {\n    return this.price * this.amount;\n  }\n\n  @action.bound\n  increment() {\n    this.amount++;\n  }\n}\n\nGarfish.run({\n  basename: basePath,\n  domGetter: '#subModule',\n  apps,\n  props: {\n    store: new Store(),\n  },\n});\n")),(0,o.kt)("h3",{id:"sub-application-fetching-data"},"Sub-application fetching data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const store = window.Garfish.props.store;\nconst price = store.price;\nconst amount = store.amount;\nstore.increment();\n")),(0,o.kt)("h3",{id:"or-get-it-in-the-provider"},"Or get it in the provider"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export function provider({ dom, basename, store }) {\n  return {\n    render() {},\n    destroy() {},\n  };\n}\n")))}d.isMDXComponent=!0}}]);