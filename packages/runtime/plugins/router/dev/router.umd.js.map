{"version":3,"file":"router.umd.js","sources":["../src/urlUt.ts","../src/config.ts","../src/navEvent.ts","../src/utils.ts","../src/agentRouter.ts","../src/index.ts"],"sourcesContent":["import { AppInfo } from './config';\nexport function formatQuery(query: { [props: string]: string } = {}) {\n  const qs = Object.keys(query)\n    .map((key) => `${key}=${query[key]}`)\n    .join('&');\n  return qs ? '?' + qs : '';\n}\n\nexport function parseQuery(query = '') {\n  const res: { [props: string]: string[] } = {};\n  if (query) {\n    query\n      .slice(1)\n      .split('&')\n      .map((item) => {\n        const pairs = item.split('=');\n        res[pairs[0]] = pairs;\n      });\n  }\n  return res;\n}\n\n/**\n * 解析出子应用的根路由,取得app1\n * 解析内容：\n *    /basename/app1/about、basename/app1、basename/app1/、/app1/、/app1/about、app1/\n *    #/app1、/#/app1/、/#/app1/detail/、/#/app1/detail\n * @param path\n */\nexport function parsePath(path: string) {\n  const matches = path.match(new RegExp('^/([^/]+)')) || [];\n  return `/${matches[1] || ''}`;\n}\n\nexport function find(arr: Array<Function>, func: Function) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\nexport function getAppRootPath(basename, path, appInfo: AppInfo) {\n  let appRootPath = basename === '/' ? '' : basename;\n  if (typeof appInfo.activeWhen === 'string') {\n    appRootPath += appInfo.activeWhen;\n  } else {\n    appRootPath += path.split('').reduce((pre, next) => {\n      if (typeof appInfo.activeWhen === 'function' && appInfo.activeWhen(pre))\n        return pre + next;\n      return pre;\n    }, '');\n  }\n  return appRootPath;\n}\n","export interface AppInfo {\n  name: string;\n  activeWhen: string | ((path: string) => boolean);\n  entry: string;\n  [prop: string]: any;\n  // loader: () => Promise<any>;\n}\n\nexport type RouterHook = (\n  to: CurrentRouterInfo,\n  from: CurrentRouterInfo,\n  next,\n) => void;\n\nexport type RouterChange = (path: string) => void;\n\nexport interface RouterInfo {\n  fullPath: string;\n  path: string;\n  query: Object;\n}\n\nexport interface CurrentRouterInfo extends RouterInfo {\n  matched: Array<AppInfo>;\n}\n\nexport const __GAR_ROUTER_UPDATE_FLAG__ = '__GAR_ROUTER_UPDATE_FLAG__';\n\nexport interface Options {\n  basename?: string;\n  current?: CurrentRouterInfo;\n  autoRefreshApp?: boolean;\n  apps: Array<AppInfo>;\n  beforeEach?: RouterHook;\n  afterEach?: RouterHook;\n  routerChange?: (url: string) => void;\n  active: (appInfo: AppInfo, rootPath: string) => Promise<void>;\n  deactive: (appInfo: AppInfo, rootPath: string) => Promise<void>;\n  notMatch?: (path: string) => void;\n}\n\nexport const RouterConfig: Options = {\n  basename: '',\n  current: {\n    fullPath: '/',\n    path: '/',\n    matched: [],\n    query: {},\n  },\n  apps: [],\n  beforeEach: (to, from, next) => next(),\n  afterEach: (to, from, next) => next(),\n  active: () => Promise.resolve(),\n  deactive: () => Promise.resolve(),\n  routerChange: () => {},\n  autoRefreshApp: true,\n};\n\nexport function set<T extends keyof Options>(field: T, value: Options[T]) {\n  RouterConfig[field] = value;\n}\n\nexport function get(field: keyof Options) {\n  return RouterConfig[field];\n}\n\nexport function setRouterConfig(options: Partial<Options>) {\n  Object.assign(RouterConfig, options);\n}\n","import { RouterConfig, __GAR_ROUTER_UPDATE_FLAG__ } from './config';\n\nfunction createPopStateEvent(state: any, originalMethodName: string) {\n  let evt;\n  try {\n    evt = new PopStateEvent('popstate', { state });\n  } catch (err) {\n    // IE 11 compatibility\n    evt = document.createEvent('PopStateEvent');\n    (evt as any).initPopStateEvent('popstate', false, false, state);\n  }\n  (evt as any).gar = true;\n  (evt as any).garTrigger = originalMethodName;\n  return evt;\n}\n\nexport const callCapturedEventListeners = (type: keyof History) => {\n  const eventArguments = createPopStateEvent(window.history.state, type);\n  window.dispatchEvent(eventArguments);\n};\n\nconst handlerParams = function (\n  path: string,\n  query: { [key: string]: string },\n): string {\n  if (!path || typeof path !== 'string') return '';\n  let url = path;\n  if (url[0] !== '/') url = '/' + url;\n  if (Object.prototype.toString.call(query) === '[object Object]') {\n    const qs = Object.keys(query)\n      .map((key) => `${key}=${query[key]}`)\n      .join('&');\n    url += qs ? '?' + qs : '';\n  }\n  url = RouterConfig.basename + url;\n  if (url[0] !== '/') url = '/' + url;\n  return url;\n};\n\nexport const push = ({\n  path,\n  query,\n}: {\n  path: string;\n  query?: { [key: string]: string };\n}) => {\n  const url = handlerParams(path, query!);\n  history.pushState({ [__GAR_ROUTER_UPDATE_FLAG__]: true }, '', url);\n};\n\nexport const replace = ({\n  path,\n  query,\n}: {\n  path: string;\n  query?: { [key: string]: string };\n}) => {\n  const url = handlerParams(path, query!);\n  history.replaceState({ [__GAR_ROUTER_UPDATE_FLAG__]: true }, '', url);\n};\n","import { RouterHook } from './config';\n\nexport async function asyncForEach<T>(\n  arr: T[],\n  callback: (v: T, k: number, O: T[]) => Promise<any>,\n) {\n  const length = arr.length;\n  let k = 0;\n  while (k < length) {\n    const kValue = arr[k];\n    await callback(kValue, k, arr);\n    k++;\n  }\n}\n\nexport function toMiddleWare(to, from, cb: RouterHook) {\n  return new Promise((resolve, reject) => {\n    try {\n      cb(to, from, resolve);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function getPath(basename: string, pathname?: string) {\n  if (basename === '/' || basename === '') {\n    return pathname || location.pathname;\n  } else {\n    return (pathname || location.pathname).replace(\n      new RegExp(`^/?${basename}`),\n      '',\n    );\n  }\n}\n","import { parseQuery, getAppRootPath } from './urlUt';\nimport { callCapturedEventListeners } from './navEvent';\nimport { asyncForEach, toMiddleWare, getPath } from './utils';\nimport {\n  RouterConfig,\n  set as RouterSet,\n  setRouterConfig,\n  RouterInfo,\n  __GAR_ROUTER_UPDATE_FLAG__,\n} from './config';\n\nexport const normalAgent = () => {\n  // 侦听pushState及replaceState，调用linkTo、处理、侦听回退\n  // 重写history api方法，在调用时触发事件\n  const rewrite = function (type: keyof History) {\n    const hapi = history[type];\n    return function () {\n      const urlBefore = window.location.pathname + window.location.hash;\n      const res = hapi.apply(this as any, arguments);\n      const urlAfter = window.location.pathname + window.location.hash;\n\n      const e = new Event(type.toLowerCase());\n      (e as any).arguments = arguments;\n      if (urlBefore !== urlAfter) {\n        RouterConfig.routerChange && RouterConfig.routerChange(urlAfter);\n        linkTo({\n          toRouterInfo: {\n            fullPath: urlAfter,\n            query: parseQuery(location.search),\n            path: getPath(RouterConfig.basename!, urlAfter),\n          },\n          fromRouterInfo: {\n            fullPath: urlBefore,\n            query: parseQuery(location.search),\n            path: getPath(RouterConfig.basename!, urlBefore),\n          },\n          eventType: type,\n        });\n      }\n      window.dispatchEvent(e);\n      return res;\n    };\n  };\n\n  history.pushState = rewrite('pushState');\n  history.replaceState = rewrite('replaceState');\n\n  // 在收集子应用路由前，子应用间前进后退路由更新子应用\n  window.addEventListener(\n    'popstate',\n    function () {\n      RouterConfig.routerChange && RouterConfig.routerChange(location.pathname);\n      linkTo({\n        toRouterInfo: {\n          fullPath: location.pathname,\n          query: parseQuery(location.search),\n          path: getPath(RouterConfig.basename!, location.pathname),\n        },\n        fromRouterInfo: {\n          fullPath: RouterConfig.current!.fullPath,\n          path: RouterConfig.current!.path,\n          query: RouterConfig.current!.query,\n        },\n        eventType: 'popstate',\n      });\n    },\n    false,\n  );\n};\n\n// Overloading to specify the routing\nexport const linkTo = async ({\n  toRouterInfo,\n  fromRouterInfo,\n  eventType,\n}: {\n  toRouterInfo: RouterInfo;\n  fromRouterInfo: RouterInfo;\n  eventType: keyof History | 'popstate';\n}) => {\n  const {\n    basename = '',\n    current,\n    apps,\n    deactive,\n    active,\n    notMatch,\n    beforeEach,\n    afterEach,\n    autoRefreshApp,\n  } = RouterConfig;\n  // /、/detail\n  const path: string = getPath(basename, location.pathname);\n\n  // Inspection application is activated\n  const hasActive = (activeWhen: any) => {\n    if (typeof activeWhen === 'string') {\n      if (activeWhen[0] !== '/') activeWhen = `/${activeWhen}`;\n      const activeWhenArr = activeWhen.split('/');\n      const pathArr = path.split('/');\n      let flag: boolean = true;\n      activeWhenArr.forEach((pathItem: string, index: number) => {\n        if (pathItem && pathItem !== pathArr[index]) {\n          flag = false;\n        }\n      });\n      return flag;\n    } else {\n      return activeWhen(path);\n    }\n  };\n\n  const deactiveApps = current!.matched.filter(\n    ({ activeWhen }) => !hasActive(activeWhen),\n  );\n\n  // Activate the corresponding application\n  const activeApps = apps.filter(({ activeWhen }) => {\n    return hasActive(activeWhen);\n  });\n\n  const needToActive = activeApps.filter(({ name }) => {\n    const isExist = current!.matched.some(({ name: cName }) => name === cName);\n    return !isExist;\n  });\n\n  // router infos\n  const to = {\n    basename: basename,\n    ...toRouterInfo,\n    matched: needToActive,\n  };\n\n  const from = {\n    basename: basename,\n    ...fromRouterInfo,\n    matched: deactiveApps,\n  };\n\n  await toMiddleWare(to, from, beforeEach!);\n\n  // Pause the current application of active state\n  if (current!.matched.length > 0) {\n    await asyncForEach(\n      deactiveApps,\n      async (appInfo) => await deactive(appInfo, path),\n    );\n  }\n\n  // save state\n  // Root routing is not loaded by default application\n  if (path === '/' || !path) {\n    RouterSet('current', {\n      path: '/',\n      fullPath: basename + '/',\n      matched: [],\n      query: {},\n    });\n    await toMiddleWare(to, from, afterEach!);\n    return;\n  }\n\n  setRouterConfig({\n    current: {\n      fullPath: location.pathname,\n      path: getPath(RouterConfig.basename!),\n      matched: activeApps,\n      query: parseQuery(location.search),\n    },\n  });\n\n  // Within the application routing jump, by collecting the routing function for processing.\n  // Filtering gar-router popstate hijacking of the router\n  // In the switch back and forth in the application is provided through routing push method would trigger application updates\n  // application will refresh when autoRefresh configuration to true\n  const curState = window.history.state || {};\n  if (\n    eventType !== 'popstate' &&\n    ((needToActive.length === 0 && curState[__GAR_ROUTER_UPDATE_FLAG__]) ||\n      autoRefreshApp)\n  )\n    callCapturedEventListeners(eventType);\n\n  await asyncForEach(needToActive, async (appInfo) => {\n    // Function using matches character and routing using string matching characters\n    const appRootPath = getAppRootPath(basename, path, appInfo);\n    await active(appInfo, appRootPath);\n  });\n\n  if (activeApps.length === 0 && notMatch) notMatch(path);\n\n  await toMiddleWare(to, from, afterEach!);\n};\n\nexport const listen = () => {\n  normalAgent();\n  linkTo({\n    toRouterInfo: {\n      fullPath: location.pathname,\n      path: getPath(RouterConfig.basename!),\n      query: parseQuery(location.search),\n    },\n    fromRouterInfo: {\n      fullPath: '/',\n      path: '/',\n      query: {},\n    },\n    eventType: 'pushState',\n  });\n};\n","import { listen } from './agentRouter';\nimport {\n  setRouterConfig,\n  RouterConfig,\n  set as RouterSet,\n  Options,\n  AppInfo,\n  RouterHook,\n  RouterChange,\n} from './config';\nimport { push, replace } from './navEvent';\n\nexport { push, replace } from './navEvent';\n\nexport const beforeEach = (hook: RouterHook) => {\n  RouterSet('beforeEach', hook);\n};\n\nexport const afterEach = (hook: RouterHook) => {\n  RouterSet('afterEach', hook);\n};\n\nexport const routerChange = (hook: RouterChange) => {\n  RouterSet('routerChange', hook);\n};\n\nexport const registerRouter = (Apps: Array<AppInfo>) => {\n  const unregisterApps = Apps.filter(\n    (app) => !RouterConfig.apps.some((item) => app.name === item.name),\n  );\n  RouterSet('apps', RouterConfig.apps.concat(unregisterApps));\n};\n\n/**\n * 1.注册子应用\n * 2.对应子应用激活，触发激活回调\n * @param Options\n */\nexport const listenRouterAndReDirect = ({\n  apps,\n  basename,\n  autoRefreshApp,\n  active,\n  deactive,\n  notMatch,\n}: Options) => {\n  // 注册子应用、注册激活、销毁钩子\n  registerRouter(apps);\n\n  // 初始化信息\n  setRouterConfig({\n    basename,\n    autoRefreshApp,\n    // supportProxy: !!window.Proxy,\n    active,\n    deactive,\n    notMatch,\n  });\n\n  // 开始监听路由变化触发、子应用更新。重载默认初始子应用\n  listen();\n};\n\nconst Router = {\n  push,\n  replace,\n  beforeEach,\n  afterEach,\n  registerRouter,\n  routerChange,\n  listenRouterAndReDirect,\n};\n\n//eslint-disable-next-line\nexport default Router;\n"],"names":["RouterSet"],"mappings":"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"}